import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import React, { useEffect, useState } from 'react'
import axios from "axios";
import { useRouter } from 'next/router'




function TopShows(title: String) {
  const router = useRouter()
  let [showSearch, setShowSearch] = useState<any>([])
  let [isLoading, setLoading] = useState(false);
  let [showList, setShowList] = useState<any>([])


  const searchShow = async (search: string) => {
    if (search.length === 0) {
      setShowSearch([])
    }
    if (search.length >= 2) {
      await axios("https://api.themoviedb.org/3/search/tv?api_key=" + process.env.NEXT_PUBLIC_TMDB + "&language=en-US&page=1&query=" + search + "&include_adult=false").then(
        (res) => {
          const json = res.data;
          let totalResults = 0
          let searchResults = []
          for (let i = 0; i < json.results.length; ++i) {
            if (totalResults === 5) {
              break
            }
            let showName = json.results[i]['name'];
            let showID = json.results[i]['id']
            let posterPath = "https://image.tmdb.org/t/p/w500" + json.results[i]['poster_path']
            searchResults.push([showName, showID, posterPath])
            totalResults += 1
          }
          setShowSearch(searchResults || [])
        }
      )

    }
    return 'Show Found!'
  }

  const topShows = async ()=>{
    let searchResults = []
    let page = 1
    let showCount = 1;
    while (showCount < 100){
    const top100 = await fetch("https://api.themoviedb.org/3/tv/popular?api_key=" + process.env.NEXT_PUBLIC_TMDB + "&language=en-US&page="+page)
    const data100 = await top100.json()
    page+=1
    for (let i = 0; i < data100.results.length; ++i){
        showCount+=1
        let posterPath = "https://image.tmdb.org/t/p/w500" + data100.results[i].poster_path
        searchResults.push({name:data100.results[i].name, id:data100.results[i].id, poster_path:posterPath})
    }
    }
    setShowList(searchResults)
  }

  topShows()

  var showRes = showSearch
  return (
    <div>
    <div className={styles.container}>
      <Head>
        <title>ScatterTV</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.showHeader}>
        <a className={styles.returnButton} onClick={()=>{
            router.push('/')
        }}> &lt; return to homepage</a>

        <h1 className={styles.title}>
          <a>ScatterTV</a>
        </h1>
      </div>

      <main className={styles.main}>
        <input
          placeholder="Search..."
          type="text"
          // className="md:w-1/2"
          onChange={(e) => {
            searchShow(e.target.value)
          }
          }
        />
                <div className="hidden lg:block">
        {isLoading ? <p>Loading Show...</p> :
          <table>
            <tbody>
              {showRes.map(emp => (
                <tr key={emp}>
                  <td className={styles.resultCellImg} onClick={() => {
                  }}><img width='75px' src={emp[2]}></img></td>
                  <td className={styles.resultCellName} onClick={() => {
                    setLoading(true)
                    router.push('/shows/'+emp[1])
                  }}>{emp[0]}</td>
                </tr>
              ))}
            </tbody>
          </table>
        }
        </div>

          <table>
            <tbody>
              {showList.map(emp => (
                <tr key={emp}>
                  <td className={styles.resultCellImg} onClick={() => {
                  }}><img width='150px' src={emp.poster_path}></img></td>
                  <td className={styles.resultCellName} onClick={() => {
                    setLoading(true)
                    router.push('/shows/'+emp.id)
                  }}>{emp.name}</td>
                </tr>
              ))}
            </tbody>
          </table>

      </main>

    </div>
      <footer className={styles.footer}>
              <a
                href="https://www.themoviedb.org"
                target="_blank"
                rel="noopener noreferrer"
              >
                Powered by{' '}
                <span className={styles.logo}>
                  <Image src="/tmdbLogo.svg" alt="TMDB Logo" width={72} height={16} />
                </span>
              </a>
      </footer>

    </div>

  )
}

export default TopShows